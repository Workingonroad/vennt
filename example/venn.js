// Generated by CoffeeScript 1.4.0
(function() {
  var SVG, draw_venn1, draw_venn2, draw_venn3, draw_venn4;

  SVG = (function() {

    function SVG(elem, w, h, m) {
      this.w = w;
      this.h = h;
      this.m = m;
      this.svg = d3.select(elem).append("svg:svg").attr("width", this.w + 2 * this.m).attr("height", this.h + 2 * this.m).append("g").attr("transform", "translate(" + this.m + "," + this.m + ")");
    }

    SVG.prototype.circle = function(x, y, r) {
      return this.svg.append("svg:circle").attr("cx", x).attr("cy", y).attr("r", r);
    };

    SVG.prototype.text = function(str, x, y, _arg) {
      var anchor, click, s, _ref;
      _ref = _arg != null ? _arg : {}, click = _ref.click, anchor = _ref.anchor;
      s = this.svg.append("svg:text").text(str).attr('x', x).attr('y', y);
      if (anchor == null) {
        anchor = 'middle';
      }
      s.attr("text-anchor", anchor);
      if (click == null) {
        click = null;
      }
      if (click != null) {
        return s.on('click', click);
      }
    };

    return SVG;

  })();

  draw_venn1 = function(elem, opts) {
    var h, r, svg, w;
    w = 300;
    h = 300;
    r = 400 / 3;
    svg = new SVG(elem, w, h, 5);
    svg.circle(w / 2, r, r).style("fill", "cyan").style("fill-opacity", ".5");
    svg.text(opts[1]['lbl'], w / 2, r / 3, {
      anchor: 'start'
    });
    return svg.text(opts[1]['str'], w / 2, r, {
      click: function() {
        return opts['click'](1);
      }
    });
  };

  draw_venn2 = function(elem, opts) {
    var b1, b2, h, r, svg, w, z;
    w = 400;
    h = 300;
    r = 400 / 3;
    z = r * Math.sqrt(3) / 2;
    svg = new SVG(elem, w, h, 5);
    svg.circle(r, r, r).style("fill", "#6fff05");
    svg.circle(2 * r, r, r).style("fill", "#ff6405");
    b1 = 1;
    b2 = 2;
    svg.text(opts[b1]['lbl'], w / 2 - r / 2, r / 2, {
      anchor: 'end'
    });
    svg.text(opts[b2]['lbl'], w / 2 + r / 2, r / 2, {
      anchor: 'start'
    });
    svg.text(opts[b1]['str'], r / 2, r, {
      click: function() {
        return opts['click'](b1);
      }
    });
    svg.text(opts[b1 | b2]['str'], 3 * r / 2, r, {
      click: function() {
        return opts['click'](b1 | b2);
      }
    });
    return svg.text(opts[b2]['str'], 5 * r / 2, r, {
      click: function() {
        return opts['click'](b2);
      }
    });
  };

  draw_venn3 = function(elem, opts) {
    var b1, b2, b3, h, r, svg, w, z;
    w = 400;
    h = 380;
    r = 400 / 3;
    z = r * Math.sqrt(3) / 2.0;
    svg = new SVG(elem, w, h, 30);
    svg.circle(w / 2, r, r).style("fill", "#6fff05");
    svg.circle(r, r + z, r).style("fill", "#ff6405");
    svg.circle(2 * r, r + z, r).style("fill", "#0525ff");
    b1 = 1;
    b2 = 2;
    b3 = 4;
    svg.text(opts[b1]['lbl'], w / 4, r / 4, {
      anchor: 'end'
    });
    svg.text(opts[b2]['lbl'], w / 10, r + 2 * z, {
      anchor: 'end'
    });
    svg.text(opts[b3]['lbl'], w - r / 3, r + 2 * z, {
      anchor: 'start'
    });
    svg.text(opts[b1]['str'], w / 2, r / 2, {
      click: function() {
        return opts['click'](b1);
      }
    });
    svg.text(opts[b2]['str'], w / 2 - r, r + z + 1.0 * z / 2.0, {
      click: function() {
        return opts['click'](b2);
      }
    });
    svg.text(opts[b3]['str'], w / 2 + r, r + z + 1.0 * z / 2.0, {
      click: function() {
        return opts['click'](b3);
      }
    });
    svg.text(opts[b1 | b2]['str'], r, r + 1 * z / 3, {
      click: function() {
        return opts['click'](b1 | b2);
      }
    });
    svg.text(opts[b1 | b3]['str'], 2 * r, r + 1 * z / 3, {
      click: function() {
        return opts['click'](b1 | b3);
      }
    });
    svg.text(opts[b2 | b3]['str'], w / 2, r + z + 1 * z / 2, {
      click: function() {
        return opts['click'](b2 | b3);
      }
    });
    return svg.text(opts[b1 | b2 | b3]['str'], w / 2, r + 2 * z / 3, {
      click: function() {
        return opts['click'](b1 | b2 | b3);
      }
    });
  };

  draw_venn4 = function(elem, opts) {
    var b1, b2, b3, b4, rx, ry, svg, text, z;
    rx = 187;
    ry = 115;
    svg = new SVG(elem, 600, 500, 0);
    z = svg.svg.append("g").attr("transform", "translate(-123,-785)");
    z.append("g").attr("transform", "translate(479,1024) rotate(-40)").append("ellipse").attr("rx", rx).attr("ry", ry).style("fill", "#6fff05");
    z.append("g").attr("transform", "translate(407,938) rotate(-40)").append("ellipse").attr("rx", rx).attr("ry", ry).style("fill", "#ff6405");
    z.append("g").attr("transform", "translate(410,938) rotate(40)").append("ellipse").attr("rx", rx).attr("ry", ry).style("fill", "#0525ff");
    z.append("g").attr("transform", "translate(338,1024) rotate(40)").append("ellipse").attr("rx", rx).attr("ry", ry).style("fill", "#1e1e1e");
    text = function(str, x, y, _arg) {
      var anchor, click, s, _ref;
      _ref = _arg != null ? _arg : {}, click = _ref.click, anchor = _ref.anchor;
      s = z.append("svg:text").text(str).attr('x', x).attr('y', y);
      if (anchor == null) {
        anchor = 'middle';
      }
      s.attr("text-anchor", anchor);
      if (click == null) {
        click = null;
      }
      if (click != null) {
        return s.on('click', click);
      }
    };
    b1 = 1;
    b2 = 2;
    b3 = 4;
    b4 = 8;
    text(opts[b1]['lbl'], 190, 900, {
      anchor: 'end'
    });
    text(opts[b2]['lbl'], 260, 810, {
      anchor: 'end'
    });
    text(opts[b3]['lbl'], 550, 810, {
      anchor: 'start'
    });
    text(opts[b4]['lbl'], 630, 900, {
      anchor: 'start'
    });
    text(opts[b1]['str'], 215, 950, {
      click: function() {
        return opts['click'](b1);
      }
    });
    text(opts[b2]['str'], 295, 840, {
      click: function() {
        return opts['click'](b2);
      }
    });
    text(opts[b3]['str'], 505, 840, {
      click: function() {
        return opts['click'](b3);
      }
    });
    text(opts[b4]['str'], 605, 950, {
      click: function() {
        return opts['click'](b4);
      }
    });
    text(opts[b2 | b3]['str'], 405, 870, {
      click: function() {
        return opts['click'](b2 | b3);
      }
    });
    text(opts[b1 | b4]['str'], 405, 1130, {
      click: function() {
        return opts['click'](b1 | b4);
      }
    });
    text(opts[b1 | b2 | b3 | b4]['str'], 405, 1010, {
      click: function() {
        return opts['click'](b1 | b2 | b3 | b4);
      }
    });
    text(opts[b1 | b2 | b3]['str'], 325, 950, {
      click: function() {
        return opts['click'](b1 | b2 | b3);
      }
    });
    text(opts[b2 | b3 | b4]['str'], 475, 950, {
      click: function() {
        return opts['click'](b1 | b3 | b4);
      }
    });
    text(opts[b1 | b3]['str'], 285, 1030, {
      click: function() {
        return opts['click'](b1 | b3);
      }
    });
    text(opts[b2 | b4]['str'], 525, 1030, {
      click: function() {
        return opts['click'](b2 | b4);
      }
    });
    text(opts[b1 | b2]['str'], 270, 900, {
      click: function() {
        return opts['click'](b1 | b2);
      }
    });
    text(opts[b3 | b4]['str'], 545, 900, {
      click: function() {
        return opts['click'](b3 | b4);
      }
    });
    text(opts[b1 | b3 | b4]['str'], 345, 1070, {
      click: function() {
        return opts['click'](b1 | b3 | b4);
      }
    });
    return text(opts[b1 | b2 | b4]['str'], 465, 1070, {
      click: function() {
        return opts['click'](b1 | b2 | b4);
      }
    });
  };

  window.draw_venn = function(n, elem, opts) {
    switch (n) {
      case 1:
        return draw_venn1(elem, opts);
      case 2:
        return draw_venn2(elem, opts);
      case 3:
        return draw_venn3(elem, opts);
      case 4:
        return draw_venn4(elem, opts);
    }
  };

  $(document).ready(function() {
    var n;
    draw_venn(1, '#venn1', {
      1: {
        lbl: 'Label',
        str: 'String'
      }
    });
    draw_venn(2, '#venn2', (function() {
      var _i, _results;
      _results = [];
      for (n = _i = 0; _i <= 3; n = ++_i) {
        _results.push({
          lbl: "Label " + n,
          str: "Str " + n
        });
      }
      return _results;
    })());
    draw_venn(3, '#venn3', (function() {
      var _i, _results;
      _results = [];
      for (n = _i = 0; _i <= 7; n = ++_i) {
        _results.push({
          lbl: "Label " + n,
          str: "Str " + n
        });
      }
      return _results;
    })());
    return draw_venn(4, '#venn4', (function() {
      var _i, _results;
      _results = [];
      for (n = _i = 0; _i <= 15; n = ++_i) {
        _results.push({
          lbl: "Label " + n,
          str: "" + n
        });
      }
      return _results;
    })());
  });

}).call(this);
